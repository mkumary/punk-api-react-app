{"version":3,"sources":["api/client.js","constants/Constants.js","api/api.js","components/RandomBeer/RandomBeerComponent.js","components/SearchItem/SearchListItemComponent.js","components/SearchList/SearchListComponent.js","components/Search/SearchComponent.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","timeout","baseURL","interceptors","response","use","error","client","path","get","PLACEHOLDERS","URL","BUTTON_TEXT","LABEL","api","url","Promise","resolve","reject","then","status","data","getRandomBeer","this","getRandomNonAlcoholicBeer","searchByName","searchText","searchByDescription","descriptiveText","RandomBeerComponent","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","randomBeer","getRandomBeers","bind","assertThisInitialized","getRandomBeerHTML","_this2","setState","_this3","react_default","a","createElement","className","name","src","image_url","alt","description","onClick","Component","SearchListItemComponent","searchItem","SearchListComponent","searchList","map","ele","key","id","SearchItem_SearchListItemComponent","createList","SearchComponent","searchcat","searchResults","event","target","value","console","log","replace","type","onChange","onChangeSearchText","setSearchCategory","onSearch","SearchList_SearchListComponent","App","RandomBeer_RandomBeerComponent","components_Search_SearchComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e94f40f9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  timeout: 50000,\n  baseURL: \"https://api.punkapi.com/v2/\"\n});\n\ninstance.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    return error;\n  }\n);\n\nexport default {\n  get(path) {\n    return instance.get(path);\n  },\n  post(path, data) {\n    return instance.post(path, data);\n  }\n};\n","export const PLACEHOLDERS = {\n  PLACEHOLDER: \"=======================\",\n  DUMMY_IMAGE_URL:\n    \"https://www.google.co.in/imgres?imgurl=https%3A%2F%2Fdriftwoodbeer.com%2Fapp%2Fuploads%2F2016%2F01%2FNaughty-Hildegard_w-Glass_A.png&imgrefurl=https%3A%2F%2Fdriftwoodbeer.com%2F&docid=c4wzJDUi4SeVrM&tbnid=bcZhlc5EPiX9MM%3A&vet=10ahUKEwiAysb78JTeAhUQEnIKHdWfCXAQMwhsKAMwAw..i&w=574&h=900&bih=690&biw=1280&q=beer%20image&ved=0ahUKEwiAysb78JTeAhUQEnIKHdWfCXAQMwhsKAMwAw&iact=mrc&uact=8\"\n};\n\nexport const URL = {\n  GET_RANDOM_BEER: \"/beers/random\",\n  GET_RANDOM_NON_ALCOHOLIC_BEER: \"/beers?abv_lt=1\",\n  SEARCH_TEXT: \"beers?beer_name=\",\n  DESCRIPTION_TEXT: \"beers?yeast=\"\n};\n\nexport const BUTTON_TEXT = {\n  ANOTHER_BEER: \"Another Beer\",\n  RANDOM_NON_ALCOHOLIC_BEER: \"Random non apcoholic beer\",\n  SEARCH: \"Search\"\n};\n\nexport const LABEL = {\n  BY_NAME: \"by name\",\n  BY_DESCRIPTION: \"by description\"\n};\n","import client from \"./client\";\nimport { URL } from \"../constants/Constants\";\n\nexport default {\n  get(url) {\n    return new Promise((resolve, reject) => {\n      client.get(url).then(response => {\n        if (response && response.status === 200) {\n          resolve(response.data);\n        } else {\n          reject(response);\n        }\n      });\n    });\n  },\n  getRandomBeer() {\n    return this.get(URL.GET_RANDOM_BEER);\n  },\n  getRandomNonAlcoholicBeer() {\n    return this.get(URL.GET_RANDOM_NON_ALCOHOLIC_BEER);\n  },\n  searchByName(searchText) {\n    return this.get(URL.SEARCH_TEXT + \"\" + searchText);\n  },\n  searchByDescription(descriptiveText) {\n    return this.get(URL.DESCRIPTION_TEXT + \"\" + descriptiveText);\n  }\n};\n","import React, { Component } from \"react\";\nimport api from \"../../api/api\";\nimport \"../RandomBeer/RandomBeer.css\";\nimport { PLACEHOLDERS, BUTTON_TEXT } from \"../../constants/Constants\";\n\nclass RandomBeerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomBeer: this.props.randomBeer\n    };\n    this.getRandomBeers = this.getRandomBeers.bind(this);\n    this.getRandomNonAlcoholicBeer = this.getRandomNonAlcoholicBeer.bind(this);\n    this.getRandomBeerHTML = this.getRandomBeerHTML.bind(this);\n  }\n  getRandomBeers() {\n    api.getRandomBeer().then(response => {\n      this.setState({ randomBeer: response[0] });\n    });\n  }\n  getRandomNonAlcoholicBeer() {\n    api.getRandomNonAlcoholicBeer().then(response => {\n      this.setState({ randomBeer: response[0] });\n    });\n  }\n  getRandomBeerHTML(randomBeer) {\n    if (randomBeer) {\n      return (\n        <div className=\"random-beer-info\">\n          <div className=\"random-beer-info-left\">\n            <h6>\n              {randomBeer.name ? randomBeer.name : PLACEHOLDERS.PLACEHOLDER}\n            </h6>\n            <img\n              src={\n                randomBeer.image_url\n                  ? randomBeer.image_url\n                  : PLACEHOLDERS.DUMMY_IMAGE_URL\n              }\n              alt=\"Beer\"\n            />\n          </div>\n          <div className=\"random-beer-info-right\">\n            <p>{randomBeer.description}</p>\n          </div>\n        </div>\n      );\n    } else {\n      this.getRandomBeers();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"random-beer-section\">\n        <div className=\"random-beer-section-left\">\n          {this.getRandomBeerHTML(this.state.randomBeer)}\n        </div>\n        <div className=\"random-beer-section-right\">\n          <button onClick={this.getRandomBeers}>\n            {BUTTON_TEXT.ANOTHER_BEER}\n          </button>\n          <button\n            className=\"non-alcoholic-btn\"\n            onClick={this.getRandomNonAlcoholicBeer}\n          >\n            {BUTTON_TEXT.RANDOM_NON_ALCOHOLIC_BEER}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RandomBeerComponent;\n","import React, { Component } from \"react\";\nimport \"../SearchItem/SearchItem.css\";\nimport { PLACEHOLDERS } from \"../../constants/Constants\";\n\nclass SearchListItemComponent extends Component {\n  render() {\n    return (\n      <div className=\"search-list-item-container\">\n        <div className=\"search-item-image\">\n          <img\n            src={\n              this.props.searchItem && this.props.searchItem.image_url\n                ? this.props.searchItem.image_url\n                : PLACEHOLDERS.DUMMY_IMAGE_URL\n            }\n            alt=\"beer\"\n          />\n        </div>\n        <div className=\"search-item-info\">\n          <div className=\"beerName\">\n            {this.props.searchItem\n              ? this.props.searchItem.name\n              : PLACEHOLDERS.PLACEHOLDER}\n          </div>\n          <div className=\"beerDesc\">\n            {this.props.searchItem\n              ? this.props.searchItem.description\n              : PLACEHOLDERS.PLACEHOLDER}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchListItemComponent;\n","import React, { Component } from \"react\";\nimport \"../SearchList/SearchList.css\";\nimport SearchListItemComponent from \"../SearchItem/SearchListItemComponent\";\n\nclass SearchListComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  createList(searchList) {\n    return (\n      searchList &&\n      searchList.map(ele => {\n        return (\n          <li key={ele.id}>\n            <SearchListItemComponent searchItem={ele} />\n          </li>\n        );\n      })\n    );\n  }\n  render() {\n    return (\n      <div className=\"search-list-container\">\n        <ul>{this.createList(this.props.searchList)}</ul>\n      </div>\n    );\n  }\n}\n\nexport default SearchListComponent;\n","import React, { Component } from \"react\";\nimport \"../Search/SearchComponent.css\";\nimport api from \"../../api/api\";\nimport SearchListComponent from \"../SearchList/SearchListComponent\";\nimport { LABEL, BUTTON_TEXT } from \"../../constants/Constants\";\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchcat: \"byname\",\n      searchText: \"\",\n      searchResults: []\n    };\n  }\n  onChangeSearchText(event) {\n    this.setState({ searchText: event.target.value });\n  }\n  setSearchCategory(event) {\n    console.log(event.target.value);\n    this.setState({\n      searchcat: event.target.value\n    });\n  }\n  onSearch() {\n    if (this.state.searchcat === \"byname\") {\n      api.searchByName(this.state.searchText).then(response => {\n        this.setState({ searchResults: response });\n      });\n    } else {\n      api\n        .searchByDescription(this.state.searchText.replace(/\\s+/g, \"_\"))\n        .then(response => {\n          this.setState({ searchResults: response });\n        });\n    }\n  }\n  render() {\n    return (\n      <div className=\"search-section\">\n        <div className=\"search-input-container\">\n          <div className=\"search-text-container\">\n            <input\n              type=\"search\"\n              onChange={this.onChangeSearchText.bind(this)}\n            />\n          </div>\n          <div\n            className=\"search-category-container\"\n            onChange={this.setSearchCategory.bind(this)}\n          >\n            <input type=\"radio\" value=\"byname\" name=\"searchkey\" />{\" \"}\n            {LABEL.BY_NAME}\n            <input type=\"radio\" value=\"bydisc\" name=\"searchkey\" />{\" \"}\n            {LABEL.BY_DESCRIPTION}\n          </div>\n          <div className=\"search-action-container\">\n            <button onClick={this.onSearch.bind(this)}>\n              {\" \"}\n              {BUTTON_TEXT.SEARCH}\n            </button>\n          </div>\n        </div>\n        <SearchListComponent searchList={this.state.searchResults} />\n      </div>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport api from \"./api/api\";\nimport RandomBeerComponent from \"./components/RandomBeer/RandomBeerComponent\";\nimport SearchComponent from \"./components/Search/SearchComponent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomBeer: null\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <RandomBeerComponent randomBeer={this.state.randomBeer} />\n        <SearchComponent />\n      </div>\n    );\n  }\n  componentWillMount() {\n    api.get(\"/beers/random\").then(response => {\n      this.setState({ randomBeer: response[0] });\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}